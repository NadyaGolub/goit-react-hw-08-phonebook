{"version":3,"file":"static/js/656.450638ce.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  min-width: 300px;\n  display: flex;\n  gap: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ButtonDel = styled.button`\n  font-weight: 400;\n\n  line-height: 1.2;\n  text-align: center;\n  cursor: pointer;\n  \n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, setFilterValue) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(setFilterValue.toLowerCase().trim()))\n});","import { ButtonDel, Item } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact, fetchContacts } from \"redux/contacts/operations\";\nimport { useEffect } from \"react\";\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDeleteContact = evt => {\n    dispatch(deleteContact(evt.target.id))\n  }\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  return (\n    <ul>\n      {contacts.map(({id, name, number}) => {\n        return (\n          <Item key={id} >\n                <p>{name}: </p>\n                <p>{number} </p>\n            <ButtonDel id={id} onClick={handleDeleteContact}>Delete</ButtonDel>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  \n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.2;\n`;\n\nexport const Btn = styled.button`\n  font-weight: 500;\n  line-height: 1.2;\n  text-align: center;\n  cursor: pointer;\n  padding: 6px 6px;\n`;\n","import { Label } from \"components/ContactForm/ContactForm.styled\";\nimport { setFilterValue } from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nexport const Filter = () => {\n    const value = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const handleSetFilter = evt => {\n        dispatch(setFilterValue(evt.target.value));\n    }\n    return (\n        <Label>  \n            <input type=\"text\" name=\"filter\" onChange={handleSetFilter} value={value} />\n        </Label>\n    ) \n} ","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { useState} from 'react';\nimport { nanoid } from 'nanoid';\nimport { Box, Btn, Label } from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\n\n const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n   const contacts = useSelector(selectContacts);\n  //  const isLoading = useSelector(selectIsLoading);\n  //  const error = useSelector(selectError);\n\n\n  const handleNameChange = evt => {\n    setName(evt.target.value);\n  };\n  const handleNumberChange = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    \n    if (contacts.some(contact => contact.name === name)) {\n      alert(`contact already exists`);\n      return;\n    }\n\n    dispatch(addContact({ name, number, id: nanoid() }));\n\n    resetForm();\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  //  useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n   \n  return (\n    <form onSubmit={handleSubmit}>\n      <Box>\n        <Label> Name </Label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          onChange={handleNameChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Label>Number </Label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          onChange={handleNumberChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        {/* {isLoading === `true` && <h2>Loading ...</h2>}\n        {error && <h2>An error occurt {error}</h2>} */}\n        <Btn type=\"submit\">Add contact</Btn>\n      </Box>\n    </form>\n  );\n};\n\nexport default ContactForm;","import styled from \"styled-components\";\n\n\nexport const Title = styled.h2`\n font-weight: 700;\n  font-size: 20px;\n  line-height: 1.2;\n  \n  \n  margin-bottom: 20px;\n  \n`;","import { Title } from \"./Section.styled\";\n\n\nexport const Section = ({ title, children }) => {\n    return (\n        <>\n            <Title>\n                {title}\n            </Title>\n            {children}\n        </>\n    )\n\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Section } from 'components/Section/Section';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title=\"Add contact\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Find contacts by name\">\n        <Filter />\n      </Section>\n      <Section title=\"Contact list\">\n      <div>{isLoading && 'Request in progress...'}</div>\n      \n        <ContactList />\n        </Section>\n    </>\n  );\n}"],"names":["Item","styled","ButtonDel","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectFilteredContacts","setFilterValue","contact","toLowerCase","includes","trim","ContactList","useSelector","dispatch","useDispatch","handleDeleteContact","evt","deleteContact","target","id","useEffect","fetchContacts","number","onClick","Box","Label","Btn","Filter","type","onChange","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","useState","setName","setNumber","resetForm","onSubmit","preventDefault","some","alert","addContact","pattern","title","required","Title","Section","children","Contacts","Helmet"],"sourceRoot":""}