{"version":3,"file":"static/js/850.11de1e13.chunk.js","mappings":"6OAEaA,EAAOC,EAAAA,GAAAA,GAAH,sIAUJC,EAAYD,EAAAA,GAAAA,OAAH,qI,UCRTE,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAKvBC,GAAyBC,EAAAA,EAAAA,IAAe,CANvB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAGP,SAAAL,GAAK,OAAIA,EAAMM,MAAV,IAGoD,SAACL,EAAUM,GAC5F,OAAON,EAASK,QAAO,SAAAE,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASJ,EAAeG,cAAcE,OAArE,GACjC,I,oBCHYC,EAAc,WACzB,IAAMZ,GAAWa,EAAAA,EAAAA,IAAYX,GACvBY,GAAWC,EAAAA,EAAAA,MACXC,EAAsB,SAAAC,GAC1BH,GAASI,EAAAA,EAAAA,IAAcD,EAAIE,OAAOC,IACnC,EAMD,OAJAC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACV,GAAE,CAACR,KAGF,wBACGd,EAASuB,KAAI,YAAyB,IAAvBH,EAAsB,EAAtBA,GAAIZ,EAAkB,EAAlBA,KAAMgB,EAAY,EAAZA,OACxB,OACE,UAAC7B,EAAD,YACM,yBAAIa,EAAJ,SACA,yBAAIgB,EAAJ,QACJ,SAAC3B,EAAD,CAAWuB,GAAIA,EAAIK,QAAST,EAA5B,sBAHSI,EAMd,KAGN,ECvBc,SAASM,IACtB,IAAMZ,GAAWC,EAAAA,EAAAA,MACXd,GAAYY,EAAAA,EAAAA,IAAYf,GAM9B,OAJAuB,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACV,GAAE,CAACR,KAGF,iCACE,SAACa,EAAA,EAAD,WACE,gDAGF,yBAAM1B,GAAa,4BACnB,SAACW,EAAD,MAGL,C","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  min-width: 300px;\n  display: flex;\n  gap: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ButtonDel = styled.button`\n  font-weight: 400;\n\n  line-height: 1.2;\n  text-align: center;\n  cursor: pointer;\n  margin-left: auto;\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, setFilterValue) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(setFilterValue.toLowerCase().trim()))\n});","import { ButtonDel, Item } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact, fetchContacts } from \"redux/contacts/operations\";\nimport { useEffect } from \"react\";\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDeleteContact = evt => {\n    dispatch(deleteContact(evt.target.id))\n  }\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  return (\n    <ul>\n      {contacts.map(({id, name, number}) => {\n        return (\n          <Item key={id} >\n                <p>{name}: </p>\n                <p>{number} </p>\n            <ButtonDel id={id} onClick={handleDeleteContact}>Delete</ButtonDel>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      \n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList/>\n    </>\n  );\n}"],"names":["Item","styled","ButtonDel","selectIsLoading","state","contacts","isLoading","selectFilteredContacts","createSelector","items","filter","setFilterValue","contact","name","toLowerCase","includes","trim","ContactList","useSelector","dispatch","useDispatch","handleDeleteContact","evt","deleteContact","target","id","useEffect","fetchContacts","map","number","onClick","Tasks","Helmet"],"sourceRoot":""}